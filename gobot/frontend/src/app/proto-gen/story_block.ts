// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "story_block.proto" (package "chatbot", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Timestamp } from "./google/protobuf/timestamp";
/**
 * @generated from protobuf message chatbot.StoryBlock
 */
export interface StoryBlock {
    /**
     * @generated from protobuf field: int32 id = 1
     */
    id: number;
    /**
     * @generated from protobuf field: string name = 2
     */
    name: string;
    /**
     * @generated from protobuf field: string rootBlockConnectionId = 3
     */
    rootBlockConnectionId: string; // use string to hold Guid
    /**
     * @generated from protobuf field: google.protobuf.Timestamp createdDate = 4
     */
    createdDate?: Timestamp;
    /**
     * @generated from protobuf field: int32 botId = 5
     */
    botId: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class StoryBlock$Type extends MessageType<StoryBlock> {
    constructor() {
        super("chatbot.StoryBlock", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "rootBlockConnectionId", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "createdDate", kind: "message", T: () => Timestamp },
            { no: 5, name: "botId", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<StoryBlock>): StoryBlock {
        const message = globalThis.Object.create((this.messagePrototype!));
        message.id = 0;
        message.name = "";
        message.rootBlockConnectionId = "";
        message.botId = 0;
        if (value !== undefined)
            reflectionMergePartial<StoryBlock>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoryBlock): StoryBlock {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string rootBlockConnectionId */ 3:
                    message.rootBlockConnectionId = reader.string();
                    break;
                case /* google.protobuf.Timestamp createdDate */ 4:
                    message.createdDate = Timestamp.internalBinaryRead(reader, reader.uint32(), options, message.createdDate);
                    break;
                case /* int32 botId */ 5:
                    message.botId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoryBlock, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string rootBlockConnectionId = 3; */
        if (message.rootBlockConnectionId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.rootBlockConnectionId);
        /* google.protobuf.Timestamp createdDate = 4; */
        if (message.createdDate)
            Timestamp.internalBinaryWrite(message.createdDate, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 botId = 5; */
        if (message.botId !== 0)
            writer.tag(5, WireType.Varint).int32(message.botId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message chatbot.StoryBlock
 */
export const StoryBlock = new StoryBlock$Type();
